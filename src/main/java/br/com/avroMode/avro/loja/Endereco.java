/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package br.com.avroMode.avro.loja;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;

@org.apache.avro.specific.AvroGenerated
public class Endereco extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7417276000436301620L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Endereco\",\"namespace\":\"br.com.avroMode.avro.loja\",\"fields\":[{\"name\":\"logradouro\",\"type\":\"string\"},{\"name\":\"bairro\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"cidade\",\"type\":\"string\"},{\"name\":\"estado\",\"type\":\"string\"},{\"name\":\"CEP\",\"type\":\"string\"},{\"name\":\"telefone\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Endereco> ENCODER =
      new BinaryMessageEncoder<Endereco>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Endereco> DECODER =
      new BinaryMessageDecoder<Endereco>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Endereco> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Endereco> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Endereco> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Endereco>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Endereco to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Endereco from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Endereco instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Endereco fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence logradouro;
   private java.lang.CharSequence bairro;
   private java.lang.CharSequence cidade;
   private java.lang.CharSequence estado;
   private java.lang.CharSequence CEP;
   private java.lang.CharSequence telefone;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Endereco() {}

  /**
   * All-args constructor.
   * @param logradouro The new value for logradouro
   * @param bairro The new value for bairro
   * @param cidade The new value for cidade
   * @param estado The new value for estado
   * @param CEP The new value for CEP
   * @param telefone The new value for telefone
   */
  public Endereco(java.lang.CharSequence logradouro, java.lang.CharSequence bairro, java.lang.CharSequence cidade, java.lang.CharSequence estado, java.lang.CharSequence CEP, java.lang.CharSequence telefone) {
    this.logradouro = logradouro;
    this.bairro = bairro;
    this.cidade = cidade;
    this.estado = estado;
    this.CEP = CEP;
    this.telefone = telefone;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return logradouro;
    case 1: return bairro;
    case 2: return cidade;
    case 3: return estado;
    case 4: return CEP;
    case 5: return telefone;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.  
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: logradouro = (java.lang.CharSequence)value$; break;
    case 1: bairro = (java.lang.CharSequence)value$; break;
    case 2: cidade = (java.lang.CharSequence)value$; break;
    case 3: estado = (java.lang.CharSequence)value$; break;
    case 4: CEP = (java.lang.CharSequence)value$; break;
    case 5: telefone = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'logradouro' field.
   * @return The value of the 'logradouro' field.
   */
  public java.lang.CharSequence getLogradouro() {
    return logradouro;
  }


  /**
   * Sets the value of the 'logradouro' field.
   * @param value the value to set.
   */
  public void setLogradouro(java.lang.CharSequence value) {
    this.logradouro = value;
  }

  /**
   * Gets the value of the 'bairro' field.
   * @return The value of the 'bairro' field.
   */
  public java.lang.CharSequence getBairro() {
    return bairro;
  }


  /**
   * Sets the value of the 'bairro' field.
   * @param value the value to set.
   */
  public void setBairro(java.lang.CharSequence value) {
    this.bairro = value;
  }

  /**
   * Gets the value of the 'cidade' field.
   * @return The value of the 'cidade' field.
   */
  public java.lang.CharSequence getCidade() {
    return cidade;
  }


  /**
   * Sets the value of the 'cidade' field.
   * @param value the value to set.
   */
  public void setCidade(java.lang.CharSequence value) {
    this.cidade = value;
  }

  /**
   * Gets the value of the 'estado' field.
   * @return The value of the 'estado' field.
   */
  public java.lang.CharSequence getEstado() {
    return estado;
  }


  /**
   * Sets the value of the 'estado' field.
   * @param value the value to set.
   */
  public void setEstado(java.lang.CharSequence value) {
    this.estado = value;
  }

  /**
   * Gets the value of the 'CEP' field.
   * @return The value of the 'CEP' field.
   */
  public java.lang.CharSequence getCEP() {
    return CEP;
  }


  /**
   * Sets the value of the 'CEP' field.
   * @param value the value to set.
   */
  public void setCEP(java.lang.CharSequence value) {
    this.CEP = value;
  }

  /**
   * Gets the value of the 'telefone' field.
   * @return The value of the 'telefone' field.
   */
  public java.lang.CharSequence getTelefone() {
    return telefone;
  }


  /**
   * Sets the value of the 'telefone' field.
   * @param value the value to set.
   */
  public void setTelefone(java.lang.CharSequence value) {
    this.telefone = value;
  }

  /**
   * Creates a new Endereco RecordBuilder.
   * @return A new Endereco RecordBuilder
   */
  public static br.com.avroMode.avro.loja.Endereco.Builder newBuilder() {
    return new br.com.avroMode.avro.loja.Endereco.Builder();
  }

  /**
   * Creates a new Endereco RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Endereco RecordBuilder
   */
  public static br.com.avroMode.avro.loja.Endereco.Builder newBuilder(br.com.avroMode.avro.loja.Endereco.Builder other) {
    if (other == null) {
      return new br.com.avroMode.avro.loja.Endereco.Builder();
    } else {
      return new br.com.avroMode.avro.loja.Endereco.Builder(other);
    }
  }

  /**
   * Creates a new Endereco RecordBuilder by copying an existing Endereco instance.
   * @param other The existing instance to copy.
   * @return A new Endereco RecordBuilder
   */
  public static br.com.avroMode.avro.loja.Endereco.Builder newBuilder(br.com.avroMode.avro.loja.Endereco other) {
    if (other == null) {
      return new br.com.avroMode.avro.loja.Endereco.Builder();
    } else {
      return new br.com.avroMode.avro.loja.Endereco.Builder(other);
    }
  }

  /**
   * RecordBuilder for Endereco instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Endereco>
    implements org.apache.avro.data.RecordBuilder<Endereco> {

    private java.lang.CharSequence logradouro;
    private java.lang.CharSequence bairro;
    private java.lang.CharSequence cidade;
    private java.lang.CharSequence estado;
    private java.lang.CharSequence CEP;
    private java.lang.CharSequence telefone;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(br.com.avroMode.avro.loja.Endereco.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.logradouro)) {
        this.logradouro = data().deepCopy(fields()[0].schema(), other.logradouro);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.bairro)) {
        this.bairro = data().deepCopy(fields()[1].schema(), other.bairro);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.cidade)) {
        this.cidade = data().deepCopy(fields()[2].schema(), other.cidade);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.estado)) {
        this.estado = data().deepCopy(fields()[3].schema(), other.estado);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.CEP)) {
        this.CEP = data().deepCopy(fields()[4].schema(), other.CEP);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.telefone)) {
        this.telefone = data().deepCopy(fields()[5].schema(), other.telefone);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing Endereco instance
     * @param other The existing instance to copy.
     */
    private Builder(br.com.avroMode.avro.loja.Endereco other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.logradouro)) {
        this.logradouro = data().deepCopy(fields()[0].schema(), other.logradouro);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.bairro)) {
        this.bairro = data().deepCopy(fields()[1].schema(), other.bairro);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.cidade)) {
        this.cidade = data().deepCopy(fields()[2].schema(), other.cidade);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.estado)) {
        this.estado = data().deepCopy(fields()[3].schema(), other.estado);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.CEP)) {
        this.CEP = data().deepCopy(fields()[4].schema(), other.CEP);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.telefone)) {
        this.telefone = data().deepCopy(fields()[5].schema(), other.telefone);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'logradouro' field.
      * @return The value.
      */
    public java.lang.CharSequence getLogradouro() {
      return logradouro;
    }


    /**
      * Sets the value of the 'logradouro' field.
      * @param value The value of 'logradouro'.
      * @return This builder.
      */
    public br.com.avroMode.avro.loja.Endereco.Builder setLogradouro(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.logradouro = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'logradouro' field has been set.
      * @return True if the 'logradouro' field has been set, false otherwise.
      */
    public boolean hasLogradouro() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'logradouro' field.
      * @return This builder.
      */
    public br.com.avroMode.avro.loja.Endereco.Builder clearLogradouro() {
      logradouro = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'bairro' field.
      * @return The value.
      */
    public java.lang.CharSequence getBairro() {
      return bairro;
    }


    /**
      * Sets the value of the 'bairro' field.
      * @param value The value of 'bairro'.
      * @return This builder.
      */
    public br.com.avroMode.avro.loja.Endereco.Builder setBairro(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.bairro = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'bairro' field has been set.
      * @return True if the 'bairro' field has been set, false otherwise.
      */
    public boolean hasBairro() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'bairro' field.
      * @return This builder.
      */
    public br.com.avroMode.avro.loja.Endereco.Builder clearBairro() {
      bairro = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'cidade' field.
      * @return The value.
      */
    public java.lang.CharSequence getCidade() {
      return cidade;
    }


    /**
      * Sets the value of the 'cidade' field.
      * @param value The value of 'cidade'.
      * @return This builder.
      */
    public br.com.avroMode.avro.loja.Endereco.Builder setCidade(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.cidade = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'cidade' field has been set.
      * @return True if the 'cidade' field has been set, false otherwise.
      */
    public boolean hasCidade() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'cidade' field.
      * @return This builder.
      */
    public br.com.avroMode.avro.loja.Endereco.Builder clearCidade() {
      cidade = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'estado' field.
      * @return The value.
      */
    public java.lang.CharSequence getEstado() {
      return estado;
    }


    /**
      * Sets the value of the 'estado' field.
      * @param value The value of 'estado'.
      * @return This builder.
      */
    public br.com.avroMode.avro.loja.Endereco.Builder setEstado(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.estado = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'estado' field has been set.
      * @return True if the 'estado' field has been set, false otherwise.
      */
    public boolean hasEstado() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'estado' field.
      * @return This builder.
      */
    public br.com.avroMode.avro.loja.Endereco.Builder clearEstado() {
      estado = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'CEP' field.
      * @return The value.
      */
    public java.lang.CharSequence getCEP() {
      return CEP;
    }


    /**
      * Sets the value of the 'CEP' field.
      * @param value The value of 'CEP'.
      * @return This builder.
      */
    public br.com.avroMode.avro.loja.Endereco.Builder setCEP(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.CEP = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'CEP' field has been set.
      * @return True if the 'CEP' field has been set, false otherwise.
      */
    public boolean hasCEP() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'CEP' field.
      * @return This builder.
      */
    public br.com.avroMode.avro.loja.Endereco.Builder clearCEP() {
      CEP = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'telefone' field.
      * @return The value.
      */
    public java.lang.CharSequence getTelefone() {
      return telefone;
    }


    /**
      * Sets the value of the 'telefone' field.
      * @param value The value of 'telefone'.
      * @return This builder.
      */
    public br.com.avroMode.avro.loja.Endereco.Builder setTelefone(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.telefone = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'telefone' field has been set.
      * @return True if the 'telefone' field has been set, false otherwise.
      */
    public boolean hasTelefone() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'telefone' field.
      * @return This builder.
      */
    public br.com.avroMode.avro.loja.Endereco.Builder clearTelefone() {
      telefone = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override    
    public Endereco build() {
      try {
        Endereco record = new Endereco();
        record.logradouro = fieldSetFlags()[0] ? this.logradouro : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.bairro = fieldSetFlags()[1] ? this.bairro : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.cidade = fieldSetFlags()[2] ? this.cidade : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.estado = fieldSetFlags()[3] ? this.estado : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.CEP = fieldSetFlags()[4] ? this.CEP : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.telefone = fieldSetFlags()[5] ? this.telefone : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Endereco>
    WRITER$ = (org.apache.avro.io.DatumWriter<Endereco>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Endereco>
    READER$ = (org.apache.avro.io.DatumReader<Endereco>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.logradouro);

    if (this.bairro == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.bairro);
    }

    out.writeString(this.cidade);

    out.writeString(this.estado);

    out.writeString(this.CEP);

    out.writeString(this.telefone);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.logradouro = in.readString(this.logradouro instanceof Utf8 ? (Utf8)this.logradouro : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.bairro = null;
      } else {
        this.bairro = in.readString(this.bairro instanceof Utf8 ? (Utf8)this.bairro : null);
      }

      this.cidade = in.readString(this.cidade instanceof Utf8 ? (Utf8)this.cidade : null);

      this.estado = in.readString(this.estado instanceof Utf8 ? (Utf8)this.estado : null);

      this.CEP = in.readString(this.CEP instanceof Utf8 ? (Utf8)this.CEP : null);

      this.telefone = in.readString(this.telefone instanceof Utf8 ? (Utf8)this.telefone : null);

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.logradouro = in.readString(this.logradouro instanceof Utf8 ? (Utf8)this.logradouro : null);
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.bairro = null;
          } else {
            this.bairro = in.readString(this.bairro instanceof Utf8 ? (Utf8)this.bairro : null);
          }
          break;

        case 2:
          this.cidade = in.readString(this.cidade instanceof Utf8 ? (Utf8)this.cidade : null);
          break;

        case 3:
          this.estado = in.readString(this.estado instanceof Utf8 ? (Utf8)this.estado : null);
          break;

        case 4:
          this.CEP = in.readString(this.CEP instanceof Utf8 ? (Utf8)this.CEP : null);
          break;

        case 5:
          this.telefone = in.readString(this.telefone instanceof Utf8 ? (Utf8)this.telefone : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










